# parameters for all capella_ros_dock's nodes

hazards_vector_publisher:
  ros__parameters:
    publisher_topic: "hazard_detection"
    subscription_topics:
    # - "backup_limit"
    # - "bump"
    # - "cliff"
    # - "stalled"
    # - "wheel_drop"
    - "object_proximity"   
    publish_rate: 5

test_dock:
  ros__parameters:
    test_count: 11
    x_min: -200
    x_max: -90
    y_min: -10
    y_max: 100

motion_control:
  ros__parameters:
    max_dock_action_run_time: 160
    min_rotation: 0.12
    max_rotation: 0.3
    min_translation: 0.02
    max_translation: 0.1
    angle_to_goal_angle_converged: 0.10
    go_to_goal_angle_too_far: 0.15
    go_to_goal_apply_rotation_angle: 0.10 # when angle_dist > this value,apply rotation
    goal_angle_converged: 0.15
    dist_goal_converged: 0.10
    last_docked_distance_offset_: 0.32
    distance_low_speed: 0.30
    translate_low_speed: 0.02
    rotation_low_speed: 0.05
    first_goal_distance: 0.0
    second_goal_distance: 0.5
    buffer_goal_distance: 1.0
    camera_horizontal_view: 64.0
    localization_converged_time: 2 # wait (n) seconds for coordinates to be converged
    tolerance_angle: 0.05
    tolerance_r: 0.1
    deviate_second_goal_x: 0.2
    dist_error_y_1: 0.05
    dist_error_x_and_y: 0.3
    motion_control_log_level: 'info'
    cmd_vel_hz: 10
    angle_delta: 0.1
    marker_size: 0.2
    dock_valid_obstacle_x: 0.60

camera_point_cloud_process:
  ros__parameters:
    topic_name: '/camera/depth/points'
    pub_frequency: 30
    obstacle_x_min: -0.2  # obstacle coordinates range; camera depth frame => (x,right) (y,down) (z,front) use camera orientation for reference
    obstacle_x_max: 0.2
    obstacle_y_min: -0.8
    obstacle_y_max: 0.3
    obstacle_z_min: 0.26
    obstacle_z_max: 0.4
  